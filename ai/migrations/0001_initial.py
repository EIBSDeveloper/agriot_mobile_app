# Generated by Django 5.2.6 on 2025-09-15 12:08

import ai.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=200, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=200, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AreaUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('areaunitdef', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='areaunit_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='country_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='city_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.country')),
            ],
        ),
        migrations.CreateModel(
            name='CropType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crop_type_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='media/crop/')),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crop_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('croptype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crops', to='ai.croptype')),
            ],
        ),
        migrations.CreateModel(
            name='Days',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='days_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Detection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deduction_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('doctype', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_category_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Duration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='duration_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('port', models.CharField(blank=True, max_length=255, null=True)),
                ('smtp', models.CharField(blank=True, max_length=255, null=True)),
                ('host', models.CharField(blank=True, max_length=255, null=True)),
                ('mail_content', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='email_config_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_template_name', models.CharField(max_length=100)),
                ('email_subject', models.CharField(blank=True, max_length=200, null=True)),
                ('email_template_content', models.TextField(blank=True, null=True)),
                ('code', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='emailtemp_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='emp_type_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExpensesCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expenses_category_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Expenses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exp_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('expenses_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.expensescategory')),
            ],
        ),
        migrations.CreateModel(
            name='Farmer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('door_no', models.CharField(blank=True, max_length=200, null=True)),
                ('pincode', models.IntegerField(blank=True, default=0, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to=ai.models.farmer_image_upload_to)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('tax_no', models.CharField(blank=True, max_length=50, null=True)),
                ('username', models.CharField(blank=True, max_length=150, null=True)),
                ('password', models.CharField(blank=True, max_length=150, null=True)),
                ('sub_admin_username', models.CharField(blank=True, max_length=150, null=True)),
                ('sub_admin_password', models.CharField(blank=True, max_length=150, null=True)),
                ('farmer', models.BooleanField(default=True)),
                ('subscription_end_date', models.DateField(blank=True, null=True)),
                ('subscription_start_date', models.DateField(blank=True, null=True)),
                ('remaining_days', models.IntegerField(blank=True, null=True)),
                ('amounts', models.IntegerField(blank=True, default=0, null=True)),
                ('sub_amounts', models.IntegerField(blank=True, default=0, null=True)),
                ('refresh_token', models.TextField(blank=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('fcm_token', models.CharField(blank=True, max_length=255, null=True)),
                ('google_login', models.BooleanField(blank=True, default=False, null=True)),
                ('locations', models.CharField(blank=True, max_length=500, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.country')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='farmer_created_by', to=settings.AUTH_USER_MODEL)),
                ('farmer_user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='farmer_profile', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FarmerReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_details', models.JSONField(blank=True, null=True)),
                ('package_details', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('farmer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='report', to='ai.farmer')),
            ],
        ),
        migrations.CreateModel(
            name='FarmerType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='farmer_type_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='farmer',
            name='farmertype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.farmertype'),
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=20)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gender_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Guidelines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('document', models.FileField(blank=True, null=True, upload_to='guidelines_documents/')),
                ('media_type', models.CharField(choices=[('video', 'Video'), ('document', 'Document')], default='document', max_length=10)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='guidelines_created_by', to=settings.AUTH_USER_MODEL)),
                ('crop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.crop')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GuidelineFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='upload/guideline_files/')),
                ('is_main', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('guideline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='ai.guidelines')),
            ],
        ),
        migrations.CreateModel(
            name='GuidelinesCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='guideline_categ_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='guidelines',
            name='guidelinescategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.guidelinescategory'),
        ),
        migrations.CreateModel(
            name='GuidelinesType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='guideline_typ_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='guidelines',
            name='guidelinestype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.guidelinestype'),
        ),
        migrations.CreateModel(
            name='HarvestingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='harvest_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventory_category', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('inventory_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.inventorytype')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to=settings.AUTH_USER_MODEL)),
                ('inventory_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.inventorycategory')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('inventory_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.inventorytype')),
            ],
        ),
        migrations.CreateModel(
            name='LandUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('landunitdef', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('factor_to_sq_m', models.FloatField(default=0)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='land_unit_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('language_code', models.CharField(max_length=10)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='language_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MachineryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='machine_categ_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Machinery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='machinery_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.machinerycategory')),
            ],
        ),
        migrations.CreateModel(
            name='ManageMarket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('openingtime', models.TimeField(blank=True, null=True)),
                ('closingtime', models.TimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to=ai.models.market_image_upload_to)),
                ('phone', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('latitude', models.TextField(blank=True, max_length=50, null=True)),
                ('longitude', models.TextField(blank=True, max_length=50, null=True)),
                ('door_no', models.CharField(blank=True, max_length=200, null=True)),
                ('pincode', models.IntegerField(blank=True, default=0, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.country')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='market_created_by', to=settings.AUTH_USER_MODEL)),
                ('days', models.ManyToManyField(blank=True, to='ai.days')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ManageProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('img', models.ImageField(blank=True, null=True, upload_to='manage product/')),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('available', models.BooleanField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manage_product_created_by', to=settings.AUTH_USER_MODEL)),
                ('markets', models.ManyToManyField(blank=True, related_name='product_market_set', to='ai.managemarket')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='managemarket',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='market_product_set', to='ai.manageproduct'),
        ),
        migrations.CreateModel(
            name='ManageUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('mobile_no', models.BigIntegerField(blank=True, null=True)),
                ('alter_no', models.BigIntegerField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('date_of_join', models.DateField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='upload/user/')),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('username', models.CharField(blank=True, max_length=150, null=True)),
                ('password', models.CharField(blank=True, max_length=150, null=True)),
                ('staff_user', models.BooleanField(default=False)),
                ('worker_availability_provider', models.BooleanField(default=False)),
                ('market_price_updater', models.BooleanField(default=False)),
                ('custom_user_id', models.PositiveIntegerField(blank=True, null=True)),
                ('can_view_general_setting', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_general_setting', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_country', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_country', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_country', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_country', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_country', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_state', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_state', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_state', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_state', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_state', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_city', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_city', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_city', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_city', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_city', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_taluk', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_taluk', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_taluk', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_taluk', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_taluk', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_village', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_village', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_village', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_village', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_village', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_land_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_land_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_land_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_land_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_land_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_area_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_area_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_area_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_area_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_area_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_soil_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_soil_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_soil_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_soil_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_soil_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_crop_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_crop_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_crop_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_crop_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_crop_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_quality', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_quality', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_quality', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_quality', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_quality', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_crop', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_crop', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_crop', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_crop', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_crop', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_product_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_product_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_product_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_product_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_product_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_vehicle_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_vehicle_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_vehicle_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_vehicle_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_vehicle_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_manage_vehicle', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_manage_vehicle', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_manage_vehicle', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_manage_vehicle', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_manage_vehicle', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_machinery_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_machinery_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_machinery_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_machinery_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_machinery_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_manage_machinery', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_manage_machinery', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_manage_machinery', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_manage_machinery', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_manage_machinery', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_tool_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_tool_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_tool_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_tool_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_tool_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_tool', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_tool', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_tool', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_tool', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_tool', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_expense_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_expense_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_expense_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_expense_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_expense_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_expense', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_expense', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_expense', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_expense', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_expense', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_harvesting_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_harvesting_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_harvesting_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_harvesting_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_harvesting_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_detection', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_detection', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_detection', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_detection', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_detection', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_farmer', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_farmer', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_farmer', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_farmer', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_farmer', models.BooleanField(blank=True, default=False, null=True)),
                ('can_update_farmer_status', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_farmer_data', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_farmer_data', models.BooleanField(blank=True, default=False, null=True)),
                ('can_subscribe_farmer_package', models.BooleanField(blank=True, default=False, null=True)),
                ('can_unsubscribe_farmer_package', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_package', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_package', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_package', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_package', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_package', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_activeplan_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_renewalplan_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_unsubscribe_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_update_subscription_status', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_manage_product', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_manage_product', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_manage_product', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_manage_product', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_manage_product', models.BooleanField(blank=True, default=False, null=True)),
                ('can_update_manage_product', models.BooleanField(blank=True, default=False, null=True)),
                ('can_graph_manage_product', models.BooleanField(blank=True, default=False, null=True)),
                ('can_staff_manage_product', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_market_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_market_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_market_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_graph_market_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_product_market_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_product_market_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_product_market_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_graph_product_market_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_allocate_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_allocate_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_allocate_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_allocate_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_allocate_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_allocate_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_allocate_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_schedule_activity_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_schedule_activity_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_schedule_activity_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_schedule_activity_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_schedule_activity_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_schedule', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_schedule', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_schedule', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_schedule', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_schedule', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_schedule', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_schedule', models.BooleanField(blank=True, default=False, null=True)),
                ('can_import_schedule', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_near_by_location_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_near_by_location_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_near_by_location_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_near_by_location_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_near_by_location_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_near_by_locations', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_near_by_locations', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_near_by_locations', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_near_by_locations', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_near_by_locations', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_near_by_locations', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_near_by_locations', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_near_by_locations', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_workers_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_workers_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_workers_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_workers_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_update_workers_type_status', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_manage_workers', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_manage_workers', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_manage_workers', models.BooleanField(blank=True, default=False, null=True)),
                ('can_update_manage_workers', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_manage_workers', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_manage_workers', models.BooleanField(blank=True, default=False, null=True)),
                ('can_update_manage_workers_status', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_manage_workers', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_manage_workers', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_guidelines_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_guidelines_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_guidelines_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_guidelines_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_update_guidelines_category_status', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_guidelines', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_guidelines', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_guidelines', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_guidelines', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_guidelines', models.BooleanField(blank=True, default=False, null=True)),
                ('can_update_guidelines_status', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_guidelines', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_guidelines', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_ter_status_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_rel_status_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_manage_user_role', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_manage_user_role', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_manage_user_role', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_manage_user_role', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_manage_user_role', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_manage_user_role', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_farmer_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_farmer_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_farmer_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_subscription_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_subscription_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_subscription_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_subscription_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_dashboard_count', models.BooleanField(blank=True, default=False, null=True)),
                ('can_dashboard_total_revenue', models.BooleanField(blank=True, default=False, null=True)),
                ('can_farmer_graph', models.BooleanField(blank=True, default=False, null=True)),
                ('can_subscription_graph', models.BooleanField(blank=True, default=False, null=True)),
                ('can_revenue_graph', models.BooleanField(blank=True, default=False, null=True)),
                ('can_market_view', models.BooleanField(blank=True, default=False, null=True)),
                ('can_market_graph', models.BooleanField(blank=True, default=False, null=True)),
                ('can_market_view_staff', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_email_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_email_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_email_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_email_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_email_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_sms_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_sms_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_sms_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_sms_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_inventory_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_inventory_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_inventory_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_inventory_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_inventory_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_inventory_items', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_inventory_items', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_inventory_items', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_inventory_items', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_inventory_items', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_document_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_document_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_document_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_document_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_document_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_rental_availability', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_rental_availability', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_rental_availability', models.BooleanField(blank=True, default=False, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.country')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_created_by', to=settings.AUTH_USER_MODEL)),
                ('employee_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.employeetype')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.gender')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Manage User',
                'verbose_name_plural': 'Manage Users',
            },
        ),
        migrations.CreateModel(
            name='AllocateMarket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='allocate_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('markets', models.ManyToManyField(blank=True, to='ai.managemarket')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.manageuser')),
            ],
        ),
        migrations.CreateModel(
            name='ManageUserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('can_view_general_setting', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_general_setting', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_country', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_country', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_country', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_country', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_country', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_state', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_state', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_state', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_state', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_state', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_city', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_city', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_city', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_city', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_city', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_taluk', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_taluk', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_taluk', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_taluk', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_taluk', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_village', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_village', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_village', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_village', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_village', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_land_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_land_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_land_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_land_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_land_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_area_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_area_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_area_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_area_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_area_unit', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_soil_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_soil_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_soil_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_soil_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_soil_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_crop_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_crop_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_crop_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_crop_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_crop_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_quality', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_quality', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_quality', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_quality', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_quality', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_crop', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_crop', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_crop', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_crop', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_crop', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_product_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_product_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_product_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_product_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_product_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_vehicle_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_vehicle_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_vehicle_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_vehicle_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_vehicle_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_manage_vehicle', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_manage_vehicle', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_manage_vehicle', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_manage_vehicle', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_manage_vehicle', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_machinery_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_machinery_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_machinery_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_machinery_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_machinery_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_manage_machinery', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_manage_machinery', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_manage_machinery', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_manage_machinery', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_manage_machinery', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_tool_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_tool_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_tool_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_tool_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_tool_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_tool', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_tool', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_tool', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_tool', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_tool', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_expense_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_expense_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_expense_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_expense_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_expense_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_expense', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_expense', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_expense', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_expense', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_expense', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_harvesting_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_harvesting_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_harvesting_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_harvesting_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_harvesting_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_detection', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_detection', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_detection', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_detection', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_detection', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_farmer', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_farmer', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_farmer', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_farmer', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_farmer', models.BooleanField(blank=True, default=False, null=True)),
                ('can_update_farmer_status', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_farmer_data', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_farmer_data', models.BooleanField(blank=True, default=False, null=True)),
                ('can_subscribe_farmer_package', models.BooleanField(blank=True, default=False, null=True)),
                ('can_unsubscribe_farmer_package', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_package', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_package', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_package', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_package', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_package', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_activeplan_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_renewalplan_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_unsubscribe_subscription', models.BooleanField(blank=True, default=False, null=True)),
                ('can_update_subscription_status', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_manage_product', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_manage_product', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_manage_product', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_manage_product', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_manage_product', models.BooleanField(blank=True, default=False, null=True)),
                ('can_update_manage_product', models.BooleanField(blank=True, default=False, null=True)),
                ('can_graph_manage_product', models.BooleanField(blank=True, default=False, null=True)),
                ('can_staff_manage_product', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_market_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_market_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_market_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_graph_market_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_product_market_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_product_market_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_product_market_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_graph_product_market_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_allocate_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_allocate_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_allocate_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_allocate_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_allocate_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_allocate_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_allocate_market', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_schedule_activity_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_schedule_activity_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_schedule_activity_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_schedule_activity_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_schedule_activity_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_schedule', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_schedule', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_schedule', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_schedule', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_schedule', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_schedule', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_schedule', models.BooleanField(blank=True, default=False, null=True)),
                ('can_import_schedule', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_near_by_location_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_near_by_location_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_near_by_location_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_near_by_location_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_near_by_location_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_near_by_locations', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_near_by_locations', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_near_by_locations', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_near_by_locations', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_near_by_locations', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_near_by_locations', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_near_by_locations', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_near_by_locations', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_workers_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_workers_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_workers_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_workers_type', models.BooleanField(blank=True, default=False, null=True)),
                ('can_update_workers_type_status', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_manage_workers', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_manage_workers', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_manage_workers', models.BooleanField(blank=True, default=False, null=True)),
                ('can_update_manage_workers', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_manage_workers', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_manage_workers', models.BooleanField(blank=True, default=False, null=True)),
                ('can_update_manage_workers_status', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_manage_workers', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_manage_workers', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_guidelines_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_guidelines_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_guidelines_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_guidelines_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_update_guidelines_category_status', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_guidelines', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_guidelines', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_guidelines', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_guidelines', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_guidelines', models.BooleanField(blank=True, default=False, null=True)),
                ('can_update_guidelines_status', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_guidelines', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_guidelines', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_ter_status_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_rel_status_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_manage_user', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_manage_user_role', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_manage_user_role', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_manage_user_role', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_manage_user_role', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_manage_user_role', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_manage_user_role', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_farmer_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_farmer_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_farmer_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_subscription_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_subscription_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_subscription_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_unique_subscription_report', models.BooleanField(blank=True, default=False, null=True)),
                ('can_dashboard_count', models.BooleanField(blank=True, default=False, null=True)),
                ('can_dashboard_total_revenue', models.BooleanField(blank=True, default=False, null=True)),
                ('can_farmer_graph', models.BooleanField(blank=True, default=False, null=True)),
                ('can_subscription_graph', models.BooleanField(blank=True, default=False, null=True)),
                ('can_revenue_graph', models.BooleanField(blank=True, default=False, null=True)),
                ('can_market_view', models.BooleanField(blank=True, default=False, null=True)),
                ('can_market_graph', models.BooleanField(blank=True, default=False, null=True)),
                ('can_market_view_staff', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_email_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_email_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_email_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_email_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_email_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_sms_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_sms_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_sms_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_sms_config', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_inventory_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_inventory_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_inventory_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_inventory_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_inventory_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_inventory_items', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_inventory_items', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_inventory_items', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_inventory_items', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_inventory_items', models.BooleanField(blank=True, default=False, null=True)),
                ('can_add_document_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_edit_document_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_document_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_delete_document_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_status_document_category', models.BooleanField(blank=True, default=False, null=True)),
                ('can_view_rental_availability', models.BooleanField(blank=True, default=False, null=True)),
                ('can_filter_rental_availability', models.BooleanField(blank=True, default=False, null=True)),
                ('can_export_rental_availability', models.BooleanField(blank=True, default=False, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_role_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='manageuser',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.manageuserrole'),
        ),
        migrations.CreateModel(
            name='MarketType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='market_type_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='managemarket',
            name='markettype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.markettype'),
        ),
        migrations.CreateModel(
            name='NearByLocationCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nearby_category_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='upload/Notification')),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PackageManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('package_validity', models.IntegerField(blank=True, null=True)),
                ('amount', models.IntegerField(blank=True, default=0, null=True)),
                ('offer', models.BooleanField(blank=True, default=0, null=True)),
                ('percentage', models.IntegerField(blank=True, default=0, null=True)),
                ('sub_amount', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('myland_count', models.IntegerField(blank=True, default=0, null=True)),
                ('mycrops_count', models.IntegerField(blank=True, default=0, null=True)),
                ('myexpense_count', models.IntegerField(blank=True, default=0, null=True)),
                ('mysale_count', models.IntegerField(blank=True, default=0, null=True)),
                ('customer_count', models.IntegerField(blank=True, default=0, null=True)),
                ('is_myfuel', models.BooleanField(default=False)),
                ('myfuel_count', models.IntegerField(blank=True, default=0, null=True)),
                ('is_myvechicle', models.BooleanField(default=False)),
                ('myvechicle_count', models.IntegerField(blank=True, default=0, null=True)),
                ('is_mymachinery', models.BooleanField(default=False)),
                ('mymachinery_count', models.IntegerField(blank=True, default=0, null=True)),
                ('is_mytools', models.BooleanField(default=False)),
                ('mytools_count', models.IntegerField(blank=True, default=0, null=True)),
                ('is_mypesticides', models.BooleanField(default=False)),
                ('mypesticides_count', models.IntegerField(blank=True, default=0, null=True)),
                ('is_myfertilizers', models.BooleanField(default=False)),
                ('myfertilizers_count', models.IntegerField(blank=True, default=0, null=True)),
                ('is_myseeds', models.BooleanField(default=False)),
                ('myseeds_count', models.IntegerField(blank=True, default=0, null=True)),
                ('is_myinventory', models.BooleanField(default=False)),
                ('myinventory_products', models.IntegerField(blank=True, default=0, null=True)),
                ('myinventory_purchase', models.IntegerField(blank=True, default=0, null=True)),
                ('myinventory_vendors', models.IntegerField(blank=True, default=0, null=True)),
                ('is_attendance', models.BooleanField(default=False)),
                ('employee_count', models.IntegerField(blank=True, default=0, null=True)),
                ('is_payouts', models.BooleanField(default=False)),
                ('is_widget', models.BooleanField(default=False)),
                ('farmer_manager_count', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='package_created_by', to=settings.AUTH_USER_MODEL)),
                ('package_duration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.duration')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='farmer',
            name='subscription_package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.packagemanagement'),
        ),
        migrations.CreateModel(
            name='AddSubcription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startdate', models.DateField(blank=True, null=True)),
                ('enddate', models.DateField(blank=True, null=True)),
                ('remainingdays', models.IntegerField(blank=True, null=True)),
                ('renewal', models.BooleanField(default=False)),
                ('payment_mode', models.IntegerField(blank=True, null=True)),
                ('payment_status', models.IntegerField(blank=True, null=True)),
                ('transaction_id', models.CharField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscrib_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('farmers', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='ai.farmer')),
                ('packages', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.packagemanagement')),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_type_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Quality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quality_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='role_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='manageuserrole',
            name='map_role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.role'),
        ),
        migrations.CreateModel(
            name='ScheduleActivityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shedule_act_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shedule_created_by', to=settings.AUTH_USER_MODEL)),
                ('crop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.crop')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('activity_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.scheduleactivitytype')),
            ],
        ),
        migrations.CreateModel(
            name='SMSConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sms_Template', models.CharField(blank=True, max_length=255, null=True)),
                ('Template_id', models.IntegerField(blank=True, null=True)),
                ('sms_type', models.IntegerField(blank=True, null=True)),
                ('sender_id', models.CharField(blank=True, max_length=255, null=True)),
                ('DLT_TE_ID', models.CharField(blank=True, max_length=255, null=True)),
                ('country_code', models.IntegerField(blank=True, null=True)),
                ('api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('message_content', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sms_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SoilType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='soil_type_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.country')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='state_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='manageuser',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.state'),
        ),
        migrations.AddField(
            model_name='managemarket',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.state'),
        ),
        migrations.CreateModel(
            name='GeneralSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='upload/GeneralSettings')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='upload/GeneralSettings')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('website', models.CharField(blank=True, max_length=250, null=True)),
                ('contact_person_name', models.CharField(blank=True, max_length=100, null=True)),
                ('personal_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('date_format', models.CharField(blank=True, max_length=20, null=True)),
                ('time_format', models.CharField(blank=True, max_length=250, null=True)),
                ('area_street', models.CharField(blank=True, max_length=200, null=True)),
                ('flat_no', models.CharField(blank=True, max_length=200, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('cgst', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('sgst', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('gst_number', models.CharField(blank=True, max_length=200, null=True)),
                ('cin', models.CharField(blank=True, max_length=250, null=True)),
                ('weather_api_key', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.country')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gs_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gs_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.state')),
            ],
        ),
        migrations.AddField(
            model_name='farmer',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.state'),
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.state'),
        ),
        migrations.CreateModel(
            name='SubscriptionReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('renewal', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('total_revenue', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('total_farmers', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.packagemanagement')),
            ],
        ),
        migrations.CreateModel(
            name='Taluk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.country')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='taluk_created_by', to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.state')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='manageuser',
            name='taluk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.taluk'),
        ),
        migrations.AddField(
            model_name='managemarket',
            name='taluk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.taluk'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='taluk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.taluk'),
        ),
        migrations.CreateModel(
            name='ToolCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tool_categ_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tools_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.toolcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('unitdef', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unit_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLanguagePreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_name', models.CharField(blank=True, max_length=100, null=True)),
                ('language_code', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.farmer')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('terminate', models.IntegerField(blank=True, default=0, null=True)),
                ('releave', models.IntegerField(blank=True, default=0, null=True)),
                ('active', models.IntegerField(blank=True, default=1, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_status_created_by', to=settings.AUTH_USER_MODEL)),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.manageuser')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField(blank=True, null=True)),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_type_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='manageuser',
            name='usertype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.usertype'),
        ),
        migrations.CreateModel(
            name='VehicleCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='veh_categ_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.vehiclecategory')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehi_manage_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.country')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='village_created_by', to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.state')),
                ('taluk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.taluk')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='manageuser',
            name='village',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.village'),
        ),
        migrations.CreateModel(
            name='ManageNearByLocations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('contact', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('openingtime', models.TimeField(blank=True, null=True)),
                ('closingtime', models.TimeField(blank=True, null=True)),
                ('latitude', models.TextField(blank=True, max_length=50, null=True)),
                ('longitude', models.TextField(blank=True, max_length=50, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to=ai.models.nearby_image_upload_to)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('door_no', models.CharField(blank=True, max_length=200, null=True)),
                ('pincode', models.IntegerField(blank=True, default=0, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.country')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manage_nearby_created_by', to=settings.AUTH_USER_MODEL)),
                ('days', models.ManyToManyField(blank=True, to='ai.days')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.nearbylocationcategory')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.state')),
                ('taluk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.taluk')),
                ('village', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.village')),
            ],
        ),
        migrations.AddField(
            model_name='managemarket',
            name='village',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.village'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='village',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.village'),
        ),
        migrations.CreateModel(
            name='WorkersType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wrk_type_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ManageWorkers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('translate_json', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manage_worker_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.manageuser')),
                ('workerstype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.workerstype')),
            ],
        ),
        migrations.CreateModel(
            name='MarketProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('available', models.BooleanField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='market_product_created_by', to=settings.AUTH_USER_MODEL)),
                ('market', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.managemarket')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.manageproduct')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('market', 'product')},
            },
        ),
        migrations.CreateModel(
            name='ProductMarketReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available', models.BooleanField(blank=True, default=False, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_day', models.DateField(blank=True, null=True)),
                ('market', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.managemarket')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.manageproduct')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai.manageuser')),
            ],
            options={
                'unique_together': {('product', 'market', 'created_day')},
            },
        ),
        migrations.CreateModel(
            name='WorkerWorkType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_count', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='worker_wrktype_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('work_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai.workerstype')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai.manageworkers')),
            ],
            options={
                'unique_together': {('worker', 'work_type')},
            },
        ),
    ]
