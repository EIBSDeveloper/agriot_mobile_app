class ManagerUser(models.Model):
    name = models.CharField(max_length=100)
    farmer = models.ForeignKey(Farmer, on_delete=models.CASCADE, null=True, blank=True)
    mobile_no = models.BigIntegerField(null=True, blank=True)
    alter_no = models.BigIntegerField(null=True, blank=True)
    date_of_birth = models.DateField(null=True, blank=True)
    gender = models.ForeignKey(Gender, on_delete=models.CASCADE, null=True, blank=True)
    email = models.EmailField(null=True, blank=True)
    date_of_join = models.DateField(null=True, blank=True)
    employee_type = models.ForeignKey(EmployeeType, on_delete=models.CASCADE, null=True, blank=True)
    image = models.ImageField(upload_to='manager_images/', null=True, blank=True)
    address = models.CharField(max_length=200, null=True, blank=True)
    pincode = models.IntegerField(null=True,blank=True)
    locations = models.CharField(max_length=200, null=True, blank=True)
    latitude = models.FloatField(null=True, blank=True)
    longitude = models.FloatField(null=True, blank=True)
    role = models.ForeignKey('ManagerUserRole', on_delete=models.CASCADE, null=True, blank=True)
    description =  models.TextField(null=True,blank=True)
    username = models.CharField(max_length=150, null=True, blank=True)
    password = models.CharField(max_length=150, null=True, blank=True)
    manager_user = models.OneToOneField(CustomUser, on_delete=models.CASCADE, related_name='manager_profile', null=True, blank=True)
    status = models.IntegerField(default=0,null=True,blank=True) # 0 - active, 1 - inactive, 2 - delete, 3 - terminated, 4 - releaved
    created_at = models.DateTimeField(auto_now_add=True,null=True,blank=True)
    created_by = models.ForeignKey(CustomUser, on_delete=models.CASCADE, null=True, blank=True, related_name='manager_created_by')
    updated_at = models.DateTimeField(auto_now=True,null=True,blank=True)
    updated_by = models.ForeignKey(CustomUser, on_delete=models.CASCADE, null=True, blank=True)
    translate_json = models.JSONField(null=True, blank=True)
    permissions = models.JSONField(null=True, blank=True)

    def __str__(self):
        return self.name
    
    def get_translated_value(self, field_name, language_code):
        if self.translate_json and field_name in self.translate_json:
            return self.translate_json[field_name].get(language_code, getattr(self, field_name))
        return getattr(self, field_name)

class ManagerUserRole(models.Model):
    name = models.CharField(max_length=100)
    farmer = models.ForeignKey(Farmer, on_delete=models.CASCADE, null=True, blank=True)
    map_role = models.ForeignKey(Role, on_delete=models.CASCADE, null=True, blank=True)
    limitation_sorting = models.IntegerField(default=0, null=True, blank=True)
    employee_count_from = models.IntegerField(default=0, null=True, blank=True)
    employee_count_to = models.IntegerField(default=0, null=True, blank=True)
    land_count_from = models.IntegerField(default=0, null=True, blank=True)
    land_count_to = models.IntegerField(default=0, null=True, blank=True)
    status = models.IntegerField(default=0,null=True,blank=True)
    created_at = models.DateTimeField(auto_now_add=True,null=True,blank=True)
    created_by = models.ForeignKey(CustomUser, on_delete=models.CASCADE, null=True, blank=True, related_name='manager_role_created_by')
    updated_at = models.DateTimeField(auto_now=True,null=True,blank=True)
    updated_by = models.ForeignKey(CustomUser, on_delete=models.CASCADE, null=True, blank=True)
    translate_json = models.JSONField(null=True, blank=True)

    def __str__(self):
        return self.name